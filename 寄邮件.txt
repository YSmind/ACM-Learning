Description
比尔吉沃特王国里所有的城市都位于X坐标轴上，位置为xi，没有两个城市位于同一点。

贾克斯喜欢寄信，寄信的花费正好等于两座城市的距离。

对于每一个城市计算从这座城市到其他城市最小的和最大的寄信花费mini，maxi，i为第i座城市。

Input
第一行有一个整数n(2<=n<=10^5)代表城市的数量，第二行有n个数x1,x2,...,xi...,xn(-10^9<=xi<=10^9)，所有的xi都不同且逐渐增大。

Output
输出n行，每一行输出两个数mini，maxi，用空格隔开，mini为第i座城市寄信的最小花费，maxi为第i座城市寄信的最大花费。

Sample Input
4
-5 -2 2 7
Sample Output
3 12
3 9
4 7
5 12



#include<stdio.h>
#include<algorithm>
#include<iostream>
#include<string.h>
#include<math.h>
using namespace std;
#define N 100005
int a[N];
int main()
{
    int n;
    while(~scanf ("%d",&n))
    {
        for (int i=1;i<=n;i++)
            scanf ("%d",&a[i]);
        for (int i=1;i<=n;i++)//一个个max，min比较吧，特殊处理一下a1和an的时候
        {
            if (i==1)
                printf ("%d %d\n",abs(a[1]-a[2]),abs(a[n]-a[1]));
            else if (i==n)
                printf ("%d %d\n",abs(a[n]-a[n-1]),abs(a[n]-a[1]));
            else
                printf ("%d %d\n",min(abs(a[i]-a[i+1]),abs(a[i]-a[i-1])),max(abs(a[i]-a[1]),abs(a[i]-a[n])));
        }
    }
    return 0;
}

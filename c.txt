/*
n的m次方根其实就是n的1/m次方，直接pow（）函数就能搞了。
不过这题没有一个人能做出来，其实是有坑的。
4的2次方根，不只是2.00，还有-2.00，看到这大家不要骂我。。。。。
所以当m是偶数的时候，应该是有两个结果，一正一负的。
其实靠的是大家的细心，考虑问题要全面。
所以我起名叫做文科的数学题，就是希望大家能理解其中的语意。

题目上说是按降序，其实就是先输出正的，再输入负。
*/


Description
上次Jonariguez失败之后，就又找了个自己认为比上次的那个要难的题，题目是这样的：
给出两个整数n，m，计算n的m次方根。
JLL看Jonariguez那么好学，就答应给他讲讲，你知道JLL是怎么解的吗？

Input
输入的第一行是一个整数T（T<=30），表示测试数据的组数：
每组数据包含两个整数n，m。0<=n<=1000，0<m<=1000






（偶数的平方根有正负两种结果！！！！）









#include <stdio.h>
#include <math.h>
int main()
{
    int i,j,n,m,T;
    scanf("%d",&T);
    while(T--){
        scanf("%d%d",&n,&m);
        if(n==0){
            printf("0.00\n");continue;
        }
        printf("%.2f\n",pow(n,1.0/m));
        if(m%2==0)
            printf("-%.2f\n",pow(n,1.0/m));
    }
    return 0;
}